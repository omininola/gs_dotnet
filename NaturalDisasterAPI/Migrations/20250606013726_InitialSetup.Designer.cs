// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NaturalDisasterAPI.Data;

#nullable disable

namespace NaturalDisasterAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250606013726_InitialSetup")]
    partial class InitialSetup
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("NaturalDisasterAPI.Models.Cidade", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("EstadoId")
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("EstadoId");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("NaturalDisasterAPI.Models.Drone", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Drones");
                });

            modelBuilder.Entity("NaturalDisasterAPI.Models.Estado", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long>("PaisId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PaisId");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("NaturalDisasterAPI.Models.Pais", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Paises");
                });

            modelBuilder.Entity("NaturalDisasterAPI.Models.Relatorio", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<long>("CidadeId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<long?>("DroneId")
                        .HasColumnType("bigint");

                    b.Property<long?>("UsuarioId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.HasIndex("DroneId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Relatorios");
                });

            modelBuilder.Entity("NaturalDisasterAPI.Models.Sensor", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Descricao")
                        .HasColumnType("longtext");

                    b.Property<long>("DroneId")
                        .HasColumnType("bigint");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("DroneId");

                    b.ToTable("Sensores");
                });

            modelBuilder.Entity("NaturalDisasterAPI.Models.Usuario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("NaturalDisasterAPI.Models.Cidade", b =>
                {
                    b.HasOne("NaturalDisasterAPI.Models.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("EstadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("NaturalDisasterAPI.Models.Estado", b =>
                {
                    b.HasOne("NaturalDisasterAPI.Models.Pais", "Pais")
                        .WithMany("Estados")
                        .HasForeignKey("PaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("NaturalDisasterAPI.Models.Relatorio", b =>
                {
                    b.HasOne("NaturalDisasterAPI.Models.Cidade", "Cidade")
                        .WithMany("Relatorios")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NaturalDisasterAPI.Models.Drone", "Drone")
                        .WithMany("Relatorios")
                        .HasForeignKey("DroneId");

                    b.HasOne("NaturalDisasterAPI.Models.Usuario", "Usuario")
                        .WithMany("Relatorios")
                        .HasForeignKey("UsuarioId");

                    b.Navigation("Cidade");

                    b.Navigation("Drone");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("NaturalDisasterAPI.Models.Sensor", b =>
                {
                    b.HasOne("NaturalDisasterAPI.Models.Drone", "Drone")
                        .WithMany("Sensores")
                        .HasForeignKey("DroneId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drone");
                });

            modelBuilder.Entity("NaturalDisasterAPI.Models.Cidade", b =>
                {
                    b.Navigation("Relatorios");
                });

            modelBuilder.Entity("NaturalDisasterAPI.Models.Drone", b =>
                {
                    b.Navigation("Relatorios");

                    b.Navigation("Sensores");
                });

            modelBuilder.Entity("NaturalDisasterAPI.Models.Estado", b =>
                {
                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("NaturalDisasterAPI.Models.Pais", b =>
                {
                    b.Navigation("Estados");
                });

            modelBuilder.Entity("NaturalDisasterAPI.Models.Usuario", b =>
                {
                    b.Navigation("Relatorios");
                });
#pragma warning restore 612, 618
        }
    }
}
